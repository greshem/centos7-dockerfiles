"""
Django settings for billing_center project.

Generated by 'django-admin startproject' using Django 1.8.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import logging
import sys
ROOT_PATH = os.path.dirname(os.path.abspath(__file__))

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = '4e9hkv3b0&&axaz9v!(q822o&!=h82+)ki4amevdp-i7ad51!0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
TEMPLATE_DEBUG=DEBUG

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = (
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'dashboard.project',
    'openstack_auth',
    'dashboard.admin',
    'dashboard.network',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #    'django.middleware.csrf.CsrfViewMiddleware',
#    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    #'dashboard.project.dump_req_response.dump_req_reponse',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)
    #'dashboard.project.generate_handle.Session_Check',

ROOT_URLCONF = 'dashboard.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(ROOT_PATH, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                "dashboard.settings.extern_context",
                ],
            },
        },
    ]

TEMPLATE_DIRS = (
    os.path.join(ROOT_PATH, 'templates'),
)

WSGI_APPLICATION = 'dashboard.wsgi.application'
AUTHENTICATION_BACKENDS = ('openstack_auth.backend.KeystoneBackend',)
AUTHENTICATION_URLS = ['openstack_auth.urls']
try:
    sys.path.append("/etc/billing")
    from settings_dashboard import *
    ImportFromEtcSuccess=True
except ImportError:
    ImportFromEtcSuccess=False
    logging.warning("Error import local_settings from /etc/billing_center")

try:
    if not ImportFromEtcSuccess:
        from dashboard.local.settings_dashboard import *
except ImportError:
    logging.warning("No local_settings file found.")


def extern_context(request):
    """
    Add some generally useful metadata to the template context
    """
    host = request.get_host()
    host_list=host.split(':')
    host=host_list[0]
    logo=''
    hostmanage=HOSTMANAGE
    if host in hostmanage:
        logoDic=host.split(".")
        logo=logoDic[-2]

    username=None
    if request.session.has_key('account'):
        username=request.session['account']['username']

    return {"logo":logo,'isProjectAdmin': request.session.get("isProjectAdmin"),'isAdmin':request.session.get("isAdmin"),
            'username': username,'horizon_url':HORIZON_URL,
            'naas_url':NAAS_URL,
            "root_url":BASE_URL,'tz':TIME_ZONE,'help_url':HORIZON_HELP_URL,'wo_url':HORIZON_WO_URL}

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#    }
#}


#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.mysql',
#        'NAME': 'django',
#        'USER': 'root',
#        'PASSWORD': 'root',
#        'HOST': '192.168.100.100',
#        'PORT': '3306',
#        }
#}
SESSION_ENGINE = 'django.contrib.sessions.backends.cache'
# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = TIME_ZONE

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/
#STATIC_ROOT = os.path.abspath(os.path.join(ROOT_PATH, '.', 'static'))
STATIC_ROOT= '/tmp/static/'
STATIC_URL = '/billing/static/'
STATICFILES_DIRS = (
    ROOT_PATH+'/static',
)
